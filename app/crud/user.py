# app/crud/user.py

from sqlalchemy.orm import Session
from app.database.models.user import User
from app.schemas.user import UserCreate
from app.auth.security import get_password_hash

def get_user_by_username(db: Session, username: str) -> User | None:
    """
    Retrieve a single user from the database by their username.

    :param db: The SQLAlchemy database session.
    :param username: The username to search for.
    :return: The User object if found, otherwise None.
    """
    return db.query(User).filter(User.username == username).first()

def create_user(db: Session, user: UserCreate) -> User:
    """
    Create a new user in the database.

    :param db: The SQLAlchemy database session.
    :param user: The user creation data (username and password) from the API request.
    :return: The newly created User object.
    """
    # 1. Hash the user's plain text password before storing it.
    hashed_password = get_password_hash(user.password)
    
    # 2. Create the new User database model instance.
    db_user = User(username=user.username, hashed_password=hashed_password)
    
    # 3. Add the new user instance to the session and commit to the database.
    db.add(db_user)
    db.commit()
    
    # 4. Refresh the instance to get data generated by the database (like id, created_at).
    db.refresh(db_user)
    
    return db_user